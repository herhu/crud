name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Set up environment variables
      run: |
        echo DB_HOST=db >> .env
        echo DB_PORT=5432 >> .env
        echo DB_USERNAME=${{ secrets.DATABASE_USER }} >> .env
        echo DB_PASSWORD=${{ secrets.DATABASE_PASSWORD }} >> .env
        echo DB_NAME=${{ secrets.DATABASE_NAME }} >> .env
        echo ECC_PRIVATE_KEY=${{ secrets.ECC_PRIVATE_KEY }} >> .env
        echo ECC_PUBLIC_KEY=${{ secrets.ECC_PUBLIC_KEY }} >> .env

    - name: Build and run Docker Compose
      run: docker compose up --build -d

    - name: Run lint
      run: docker compose exec app npm run lint

    - name: Run tests
      run: docker compose exec app npm run test

    - name: Build application
      run: docker compose exec app npm run build

    - name: Stop and remove Docker Compose
      run: docker compose down

    - name: Deploy application
      if: github.ref == 'refs/heads/main'
      run: echo "Deploying application..."
      # Add your deployment script/command here
