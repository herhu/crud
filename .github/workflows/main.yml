name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Compose
      run: |
        if ! [ -x "$(command -v docker compose)" ]; then
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
        fi

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Set up environment variables
      run: |
        echo DB_HOST=db >> .env
        echo DB_PORT=5432 >> .env
        echo DB_USERNAME=${{ secrets.DATABASE_USER }} >> .env
        echo DB_PASSWORD=${{ secrets.DATABASE_PASSWORD }} >> .env
        echo DB_NAME=${{ secrets.DATABASE_NAME }} >> .env
        echo ECC_PRIVATE_KEY=${{ secrets.ECC_PRIVATE_KEY }} >> .env
        echo ECC_PUBLIC_KEY=${{ secrets.ECC_PUBLIC_KEY }} >> .env

    - name: Build and run Docker Compose
      run: docker compose up --build -d

    - name: Run tests and build in container
      run: |
        docker compose exec app sh -c "
          npm install &&
          npm run format &&
          npm run lint &&
          npm run test &&
          npm run test:e2e &&
          npm run build
        "

    - name: Stop and remove Docker Compose
      run: docker compose down --volumes --remove-orphans

    - name: Deploy application
      if: github.ref == 'refs/heads/main'
      run: echo "Deploying application..."
      # Add deployment commands here
